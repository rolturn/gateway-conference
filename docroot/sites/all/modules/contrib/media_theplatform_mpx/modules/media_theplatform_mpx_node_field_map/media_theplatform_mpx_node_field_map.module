<?php
/**
 * Implements hook_menu().
 */
function media_theplatform_mpx_node_field_map_menu() {
  $items = array();
  $items['admin/structure/types/manage/%/mpx-field-map'] = array(
    'title' => 'mpxVideo Field Mapping',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('media_theplatform_mpx_node_field_map_form'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer media'),
    'weight' => 10,
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function media_theplatform_mpx_node_field_map_init() {
  // We need to know which kind of node we are adding to map fields correctly
  if(arg(0) == 'node' && arg(1) == 'add') {
    drupal_add_js(array('contentType' => arg(2)),'setting');
  }
  else if (arg(0) == 'node' && arg(2) == 'edit') {
    $node = node_load(arg(1));
    drupal_add_js(array('contentType' => $node->type),'setting');
  }
}

/**
 * Implements hook_theme().
 */
function media_theplatform_mpx_node_field_map_theme($existing, $type, $theme, $path) {
  return array(
    'media_theplatform_mpx_node_field_map_table' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Admin form to configure node field -> file field mappings
 * @param $form
 * @param $form_state
 * @return mixed
 */
function media_theplatform_mpx_node_field_map_form($form, $form_state) {
  $mpx_field_map = media_theplatform_mpx_variable_get('file_field_map', false);
  if($mpx_field_map) {
    drupal_set_message(t('<b>Please note:</b> currently, this module only provides support for mapping between fields with single values and matching data types. Choices are limited to fields which match these conditions. In the future, additional work will be done to offer more complex field type mappings.<br /><br />Additionally, if multiple fields are mapped to a single field, the last field to be processed will take precedence, overwriting the former value.'), 'warning');

    // Collect info about mapped file fields
    $mpx_field_map = unserialize($mpx_field_map);
    $file_fields = array();
    foreach($mpx_field_map as $drupal_field => $mpx_field) {
      $file_fi = field_info_field($drupal_field);
      $file_fields[$drupal_field]['title'] = $file_fi['field_name'];
      $file_fields[$drupal_field]['type'] = $file_fi['type'];
    }

    $instances = field_info_instances('node', arg(4));
    $node_fields = array();
    $default_values = unserialize(media_theplatform_mpx_variable_get('node_field_map'));
    $default_values = $default_values[arg(4)];

    foreach($instances as $id => $val) {
      $node_fields[$id] = $val['label'];
    }

    $form['fields'] = array(
      '#tree' => TRUE,
      '#theme' => 'media_theplatform_mpx_node_field_map_table'
    );


    foreach($node_fields as $node_field_id => $node_field_label) {
      $field_options = array();
      foreach($file_fields as $file_field_id => $file_field) {
        if(_mpx_node_fields_check_compatibility($node_field_id, $file_field_id))
          $field_options[$file_field_id] = $file_field['title'];
      }
      if(count($field_options)) {
        $form['fields'][$node_field_id]['node_field'] = array(
          '#type' => 'markup',
          '#markup' => $node_field_label,
        );

        $form['fields'][$node_field_id]['file_field'] = array(
          '#type' => 'select',
          '#title' => '',
          '#description' => '',
          '#options' => $field_options,
          '#default_value' => isset($default_values[$node_field_id]) ? $default_values[$node_field_id] : '',
          '#empty_option' => t('- Select -'),
        );
      }
    }
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Save'),
    );
    return $form;
  } else {
    drupal_set_message('In order to map node fields to file entity fields, you must first map file entity fields to mpxVideo fields. To do so, <a href="/admin/config/media/theplatform/file-mapping">click here</a>.', 'error');
  }
}

/**
 * Submit handler for node field -> file field mappings form
 * @param $form
 * @param $form_state
 */
function media_theplatform_mpx_node_field_map_form_submit($form, $form_state) {
  $content_type = arg(4);
  $fields = array();
  foreach($form_state['values']['fields'] as $id => $val) {
    if(strpos($id, 'field_') === 0 && strlen($val['file_field']))
      $fields[$id] = $val['file_field'];
  }
  $old_settings = media_theplatform_mpx_variable_get('node_field_map', false);
  if($old_settings)
    $settings = unserialize($old_settings);
  else
    $settings = array();

  $settings[$content_type] = $fields;
  media_theplatform_mpx_variable_set('node_field_map', serialize($settings));
}

/**
 * Check that a node field type matches a file field type
 * @param $node_field_id
 * @param $file_field_id
 * @return bool
 */
function _mpx_node_fields_check_compatibility($node_field_id, $file_field_id) {
  $node_field = field_info_field($node_field_id);
  $file_field = field_info_field($file_field_id);

  if($file_field['type'] !== $node_field['type'])
    return false;

  // We're only allowing single value fields on both sides (Excluding taxonomy fields)
  if($node_field['type'] != 'taxonomy_term_reference' && ($node_field['cardinality'] != 1 || $file_field['cardinality'] != 1))
    return false;

  return true;
}

/**
 * Table theme for field mapping admin page
 * @param $vars
 * @return string
 */
function theme_media_theplatform_mpx_node_field_map_table($vars) {
  $element = $vars['element'];

  $header = array(
    'node_field' => t('Node Field'),
    'file_field' => t('mpxVideo File Field'),
  );
  $rows = array();
  foreach (element_children($element) as $key) {
    $row = array();

    $row['data'] = array();
    foreach ($header as $fieldname => $title) {
      $row['data'][] = drupal_render($element[$key][$fieldname]);
    }
    $rows[] = $row;
  }

  return theme('table', array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array('id' => 'form_id'), // needed for table dragging
    'empty' => t('There are no fields mapped on your video file entities that can be mapped to this content type\'s fields. Please check your video file entity field mapping by <a href="@link">clicking here</a>', array('@link' => '/admin/config/media/theplatform/file-mapping')),
  ));
}